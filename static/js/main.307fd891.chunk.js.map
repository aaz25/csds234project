{"version":3,"sources":["logo.svg","components/Title.js","components/RateChart.js","components/StatTable.js","components/GeoSelect.js","options.js","components/Dashboard.js","components/Listener.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","xTickFormat","timeFormat","yTickFormat","format","RateChart","title","data","y","yAxisLabel","theme","useTheme","Fragment","ResponsiveContainer","LineChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","palette","text","secondary","tickFormatter","YAxis","datakey","Label","angle","position","style","textAnchor","fill","primary","Tooltip","Line","type","main","dot","form","StatTable","Table","size","TableHead","TableRow","TableCell","TableBody","align","min","d","new_cases","quantile","map","median","mean","max","new_cases_per_million","total_cases","total_cases_per_million","new_deaths","new_deaths_per_million","GeoSelect","options","location","handleChange","classes","useStyles","FormControl","className","formControl","fullWidth","InputLabel","id","Select","labelId","label","value","onChange","option","MenuItem","makeStyles","spacing","minWidth","Dashboard","useState","setData","useEffect","csv","r","date","Date","UTC","getFullYear","getMonth","getDate","population","continent","Math","floor","then","useData","setLocation","fixedHeightPaper","clsx","paper","fixedHeight","root","CssBaseline","AppBar","appBar","Toolbar","toolbar","toolbarIcon","Icon","noWrap","Drawer","drawerPaper","drawer","Box","navTool","event","target","content","appBarSpacer","Container","maxWidth","container","Grid","item","xs","Paper","filter","display","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","height","overflow","paddingTop","paddingBottom","flexDirection","sectionHeader","descriptionButton","marginTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.307fd891.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, CartesianGrid, Line, XAxis, YAxis, Label, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { format, timeFormat } from 'd3';\r\nimport Title from './Title';\r\n\r\nconst xTickFormat = timeFormat('%m/%d');\r\n\r\nconst yTickFormat = format('.2s');\r\n\r\nexport default function RateChart({ title, data, y, yAxisLabel }) {\r\n  const theme = useTheme();\r\n\r\n  // if (data.location === 'All') {\r\n  //   data = data.reverse();\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>{title}</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis\r\n            dataKey=\"date\"\r\n            stroke={theme.palette.text.secondary}\r\n            tickFormatter={xTickFormat}\r\n          />\r\n          <YAxis datakey={y} stroke={theme.palette.text.secondary} tickFormatter={yTickFormat} >\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              {yAxisLabel}\r\n            </Label>\r\n          </YAxis>\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey={y} stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport { format, min, mean, median, max, quantile } from 'd3';\r\nimport Title from './Title';\r\n\r\nconst form = format(',.2r');\r\n\r\nexport default function StatTable({ data }) {\r\n  return (\r\n    <>\r\n      <Title>Statistics</Title>\r\n      <Table size='small'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Statistic</TableCell>\r\n            <TableCell>Minimum</TableCell>\r\n            <TableCell>Q1</TableCell>\r\n            <TableCell>Median</TableCell>\r\n            <TableCell>Mean</TableCell>\r\n            <TableCell>Q3</TableCell>\r\n            <TableCell>Maximum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody align='right'>\r\n          <TableRow>\r\n            <TableCell align='left'>New cases</TableCell>\r\n            <TableCell>{form(min(data, d => d.new_cases))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_cases), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.new_cases))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.new_cases))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_cases), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.new_cases))}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align='left'>New cases per million people</TableCell>\r\n            <TableCell>{form(min(data, d => d.new_cases_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_cases_per_million), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.new_cases_per_million))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.new_cases_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_cases_per_million), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.new_cases_per_million))}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align='left'>Total cases</TableCell>\r\n            <TableCell>{form(min(data, d => d.total_cases))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.total_cases), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.total_cases))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.total_cases))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.total_cases), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.total_cases))}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align='left'>Total cases per million people</TableCell>\r\n            <TableCell>{form(min(data, d => d.total_cases_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.total_cases_per_million), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.total_cases_per_million))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.total_cases_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.total_cases_per_million), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.total_cases_per_million))}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align='left'>New deaths</TableCell>\r\n            <TableCell>{form(min(data, d => d.new_deaths))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_deaths), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.new_deaths))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.new_deaths))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_deaths), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.new_deaths))}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell align='left'>New deaths per million people</TableCell>\r\n            <TableCell>{form(min(data, d => d.new_deaths_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_deaths_per_million), 0.25))}</TableCell>\r\n            <TableCell>{form(median(data, d => d.new_deaths_per_million))}</TableCell>\r\n            <TableCell>{form(mean(data, d => d.new_deaths_per_million))}</TableCell>\r\n            <TableCell>{form(quantile(data.map(d => d.new_deaths_per_million), 0.75))}</TableCell>\r\n            <TableCell>{form(max(data, d => d.new_deaths_per_million))}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  )\r\n};","import { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from \"react\";\r\n\r\nexport default function GeoSelect({ options, location, handleChange }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormControl className={classes.formControl} variant='outlined' fullWidth>\r\n      <InputLabel id='geo-label'>Region</InputLabel>\r\n      <Select\r\n        labelId='geo-label'\r\n        label='Location'\r\n        id='location'\r\n        value={location}\r\n        onChange={handleChange}\r\n      >\r\n        {options.map(option => (\r\n          <MenuItem value={option} key={option}>{option}</MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 60\r\n  }\r\n}));","const options = [\r\n  'World',\r\n  'Africa',\r\n  'Asia',\r\n  'Europe',\r\n  'North America',\r\n  'Oceania',\r\n  'South America'\r\n];\r\n\r\nexport default options;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { Box, Icon } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport useData from './Listener';\r\nimport RateChart from './RateChart';\r\nimport StatTable from './StatTable';\r\nimport GeoSelect from './GeoSelect';\r\nimport options from '../options';\r\n\r\nexport default function Dashboard() {\r\n\r\n  const data = useData();\r\n  const classes = useStyles();\r\n  const [location, setLocation] = useState('World');\r\n\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleChange = (event) => {\r\n    setLocation(event.target.value);\r\n  };\r\n\r\n  if (!data) {\r\n    return <pre>Loading...</pre>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.toolbarIcon}>\r\n            <Icon>\r\n              <DashboardIcon />\r\n            </Icon>\r\n          </div>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Covid-19 Statistics Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* Sidebar Navigation */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n        className={classes.drawer}\r\n      >\r\n        <Toolbar />\r\n        <Box className={classes.navTool}>\r\n          <GeoSelect options={options} location={location} handleChange={handleChange} />\r\n        </Box>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <StatTable\r\n                  data={data.filter(d => d.location === location)}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='New Cases'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='new_cases'\r\n                  yAxisLabel='Number New Cases per Day'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='Total Cases'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='total_cases'\r\n                  yAxisLabel='Total Cases'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='New Cases Per Million People'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='new_cases_per_million'\r\n                  yAxisLabel='New Cases per Million People'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='Total Cases per Million People'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='total_cases_per_million'\r\n                  yAxisLabel='Total Cases per Million People'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='New Deaths'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='new_deaths'\r\n                  yAxisLabel='Number of New Deaths per Day'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <RateChart\r\n                  title='New Deaths per Million People'\r\n                  data={data.filter(d => d.location === location)}\r\n                  y='new_deaths_per_million'\r\n                  yAxisLabel='New Deaths per Million People'\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex'\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 360\r\n  },\r\n  sectionHeader: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(2)\r\n  },\r\n  navTool: {\r\n    padding: theme.spacing(2),\r\n    paddingTop: theme.spacing(4),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  descriptionButton: {\r\n    marginTop: 0.5,\r\n    align: 'left',\r\n    alignItems: 'center'\r\n  }\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport { csv, filter, sum } from 'd3';\r\n\r\nconst url = 'https://covid.ourworldindata.org/data/owid-covid-data.csv';\r\n\r\nfunction sameDate(d, i) {\r\n  if (d instanceof Date && i instanceof Date) {\r\n    return d.getYear() === i.getYear() && d.getMonth() === i.getMonth() && d.getDate() === i.getDate();\r\n  }\r\n  else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default function useData() {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const row = d => {\r\n\r\n      const r = {\r\n        date: new Date(Date.UTC(new Date(d.date).getFullYear(), new Date(d.date).getMonth(), new Date(d.date).getDate())),\r\n        total_cases: +d.total_cases,\r\n        new_cases: +d.new_cases,\r\n        new_deaths: +d.new_deaths,\r\n        total_cases_per_million: +d.total_cases_per_million,\r\n        new_cases_per_million: +d.new_cases_per_million,\r\n        new_deaths_per_million: +d.new_deaths_per_million,\r\n        population: +d.population,\r\n        continent: d.continent,\r\n        location: d.location\r\n      };\r\n\r\n      if (Math.floor((new Date() - r.date) / (1000 * 60 * 60 * 24)) < 12 &&\r\n          Math.floor((new Date() - r.date) / (1000 * 60 * 60 * 24)) >= 2) {\r\n        return r;\r\n      }\r\n    };\r\n\r\n    csv(url, row).then(setData);\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <Dashboard />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}